setwd("~/Documents/Multihierarchical_NevadoToluca/bin/Collembola/SpeciesDelimitation")
#**Defining Collembola lineage at different clustering levels: STEP 1**
#**This script gets Specie delimitation using **Collembola order**. For this, the ASV filtered dataset was used to generate an UPGMA tree with corrected distances under a F84 model, and based on this tree, all haplotypes were nested into clusterin levels (CLs) following the genetic similarity at different thresholds (0.5%, 1.5%, 3%, 5% and 7.5%), plus an additional threshold corresponding to the result of a specie delimitation analyses conducted with the generalized mixed Yule-coalescent (GMYC).
#PART 1. Distance matrix and UPGMA
library(igraph)
library(ape)
library(phangorn)
library(permute)
library(geiger)
library(lattice)
library(stats)
library(vegan)
library(base)
library(MASS)
library(paran)
library(gtools)
library(splits)
library(seqinr)
library(spam)
library(dotCall64)
library(grid)
library(maps)
library(fields)
#**Defining Collembola lineage at different clustering levels: STEP 1**
#**This script gets Specie delimitation using **Collembola order**. For this, the ASV filtered dataset was used to generate an UPGMA tree with corrected distances under a F84 model, and based on this tree, all haplotypes were nested into clusterin levels (CLs) following the genetic similarity at different thresholds (0.5%, 1.5%, 3%, 5% and 7.5%), plus an additional threshold corresponding to the result of a specie delimitation analyses conducted with the generalized mixed Yule-coalescent (GMYC).
#PART 1. Distance matrix and UPGMA
library(igraph)
library(ape)
library(phangorn)
library(permute)
library(geiger)
library(lattice)
library(stats)
library(vegan)
library(base)
library(MASS)
library(paran)
library(gtools)
library(splits)
library(seqinr)
library(spam)
library(dotCall64)
library(grid)
library(maps)
library(fields)
Collembola <- read.FASTA("../../../genetic/Data_in/Collembola/4Collembola1061_zotus_Nostops.fasta")  #leer fasta
setwd("~/Documents/Multihierarchical_NevadoToluca/bin/Collembola/SpeciesDelimitation")
#**Defining Collembola lineage at different clustering levels: STEP 2 and 3**
#**This script gets Specie delimitation using **Collembola order**. For this, the ASV filtered dataset was used to generate an UPGMA tree with corrected distances under a F84 model, and based on this tree, all haplotypes were nested into clusterin levels (CLs) following the genetic similarity at different thresholds (0.5%, 1.5%, 3%, 5% and 7.5%), plus an additional threshold corresponding to the result of a specie delimitation analyses conducted with the generalized mixed Yule-coalescent (GMYC).
#**PART 1. Distance Matrix and UPGMA**
library(ape)
library(phangorn)
library(seqinr)
library(stringr)
library(ape)
library(phangorn)
library(seqinr)
library(stringr)
Collembola <- read.FASTA("../../../genetic/Data_in/Collembola/4Collembola1061_zotus_Nostops.fasta")  #leer fasta
dist.dna(Collembola, model = "F84", as.matrix = T)->dist_Collembola  #calcular matriz distancias por pares
Collembola_UPGMA <- upgma(dist_Collembola)  #hacer arbol
plot(Collembola_UPGMA)
#PART 3: To obtain subtrees at multihierarchical levels.
#This funcion are in bin. NOTA Nos muestra un warning, aunque sigue estando bien.
source("../../NODE.MIN_Get_trees_multiple.R")
#**Arachnida**
#We used the result of the threshold time: e.g. "0.0292959" in the next analisys of each lineages.
read.table ("../../../genetic/Data_in/Collembola/4Collembola1061_zotus_Nostops.fasta", header=FALSE)->Collembola.fasta
#read.tree("Collembola_All_s2_sinSTOPS_revised.newick")->Collembola_SHORT2.tree
GMYC.thershold<-0.0292959
NODE.MIN(Collembola.fasta,Collembola_UPGMA,0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.04, 0.05, 0.06, 0.075, 0.075, 0.075, GMYC.thershold, print.subtrees = "NO", print.subtrees.fasta = "NO")
#**END**
setwd("~/Documents/MetaBC_Traps/bin/Arachnida/SpeciesDelimitation")
#PART 1. Distance matrix and UPGMA
library(igraph)
library(igraph)
library(ape)
library(phangorn)
library(permute)
library(geiger)
library(lattice)
library(stats)
library(vegan)
library(base)
library(MASS)
library(paran)
library(gtools)
library(splits)
library(seqinr)
library(spam)
library(dotCall64)
library(grid)
library(maps)
library(fields)
library(igraph)
library(ape)
library(phangorn)
library(permute)
library(geiger)
library(lattice)
library(stats)
library(vegan)
library(base)
library(MASS)
library(paran)
library(gtools)
library(splits)
library(seqinr)
library(spam)
library(dotCall64)
library(grid)
library(maps)
library(fields)
library(igraph)
library(ape)
library(phangorn)
library(permute)
library(geiger)
library(lattice)
library(stats)
library(vegan)
library(base)
library(MASS)
library(paran)
library(gtools)
library(splits)
library(seqinr)
library(spam)
library(dotCall64)
library(grid)
library(maps)
library(fields)
library(igraph)
library(ape)
library(phangorn)
library(permute)
library(geiger)
library(lattice)
library(stats)
library(vegan)
library(base)
library(MASS)
library(paran)
library(gtools)
library(splits)
library(seqinr)
library(spam)
library(dotCall64)
library(grid)
library(maps)
library(fields)
library(igraph)
library(ape)
library(phangorn)
library(permute)
library(geiger)
library(lattice)
library(stats)
library(vegan)
library(base)
library(MASS)
library(paran)
library(gtools)
library(splits)
library(seqinr)
library(spam)
library(dotCall64)
library(grid)
library(maps)
library(fields)
Arachnida <- read.FASTA("../genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta")  #leer fasta
Arachnida <- read.FASTA("../genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta")  #leer fasta
Arachnida <- read.FASTA("../../genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta")  #leer fasta
Arachnida <- read.FASTA("../genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta")  #leer fasta
Arachnida <- read.FASTA("/genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta")  #leer fasta
Arachnida <- read.FASTA("../../../genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta")  #leer fasta
dist.dna(Arachnida, model = "F84", as.matrix = T)->dist_Arachnida  #calcular matriz distancias por pares
Arachnida_UPGMA <- upgma(dist_Arachnida)  #hacer Ã¡rbol
plot(Arachnida_UPGMA)
#Those funsions are in bin
source("gmyc.pkg.0.9.6.R")
source("Powell_supplemental_script.R")
#Those funsions are in bin
source("gmyc.pkg.0.9.6.R")
#Those funsions are in bin
source("../gmyc.pkg.0.9.6.R")
#Those funsions are in bin
source("../../gmyc.pkg.0.9.6.R")
source("../../Powell_supplemental_script.R")
#**single gmyc threshold**
Arachnida_UPGMA.GMYC.singleThreshold<-gmyc.edit(Arachnida_UPGMA, method="s") #hacer GMYC
#resumen de los resultados
summary(Arachnida_UPGMA.GMYC.singleThreshold) #Mostrar resumen GMYC
sink("Arachnida/SpeciesDelimitation/Arachnida_UPGMA.GMYC.singleThreshold.log", type=c("output","message"), split=TRUE) #guardar resultado del GMYC (resumen)
sink("../../Arachnida/SpeciesDelimitation/Arachnida_UPGMA.GMYC.singleThreshold.log", type=c("output","message"), split=TRUE) #guardar resultado del GMYC (resumen)
#MIT.test.s o MIT.test.m para ver todos los datos
summary(Arachnida_UPGMA.GMYC.singleThreshold)
sink()
setwd("~/Documents/MetaBC_Traps/bin/Arachnida/SpeciesDelimitation")
#**PART 1. Distance Matrix and UPGMA**
library(ape)
library(ape)
library(phangorn)
library(seqinr)
library(stringr)
library(ape)
library(phangorn)
library(seqinr)
library(stringr)
library(ape)
library(phangorn)
library(seqinr)
library(stringr)
Arachnida <- read.FASTA("../../../genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta")  #leer fasta
dist.dna(Arachnida, model = "F84", as.matrix = T)->dist_Arachnida  #calcular matriz distancias por pares
Arachnida_UPGMA <- upgma(dist_Arachnida)  #hacer arbol
plot(Arachnida_UPGMA)
source("../../NODE.MIN_Get_trees_multiple.R")
source("../../NODE.MIN_Get_trees_multiple.R")
#**Arachnida**
#We used the result of the threshold time: e.g. "0.0292959" in the next analisys of each lineages.
read.table ("../../../genetic/Orders9&Etiquetas/Arachnida_138_33SOPAS_UNIQUES_ExpeRelabel420_20_26_1_alignment.fasta", header=FALSE)->Arachnida.fasta
#read.tree("Arachnida_All_s2_sinSTOPS_revised.newick")->Arachnida_SHORT2.tree
GMYC.thershold<-0.006338239
NODE.MIN(Arachnida.fasta,Arachnida_UPGMA,0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.04, 0.05, 0.06, 0.075, 0.075, 0.075, GMYC.thershold, print.subtrees = "NO", print.subtrees.fasta = "NO")
