##Hymenoptera
as.matrix(community_Hymenoptera_Traps_h)->community_Hymenoptera_Traps_h
row.names(community_Hymenoptera_Traps_h)->sample_names_Traps_h
dim(community_Hymenoptera_Traps_h)->dims_Traps_h
dims_Traps_h
.rowSums (community_Hymenoptera_Traps_h,dims_Traps_h[1],dims_Traps_h[2])->sample_richness_Traps_h ##summatory by rows
rbind(sample_names_Traps_h,sample_richness_Traps_h)->richness_Traps_h_Hymenoptera
t(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
colnames(richness_Traps_h_Hymenoptera)<-c("sample_names_Traps_h","sample_richness_Traps_h")
richness_Traps_h_Hymenoptera
as.data.frame(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps_h_Hymenoptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera ##generating a variable combining layer and habitat
richness_Traps_h_Hymenoptera
##**Generating variables with in total Traps_C.**
#richness_Traps_h_Hymenoptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_TrapsC
#richness_TrapsC
#richness_TrapsC %>% unite(Conservation1Mountain1, Conservation1, Mountain1, sep="_",remove=FALSE)->richness_TrapsC ##generating a variable combining layer and habitat
#richness_TrapsC
##**BY Traps**
write.table(richness_Traps_h_Hymenoptera, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt",header=TRUE)->richness_Traps_h_Hymenoptera
##**BY Traps_C general**
##**General plot of richness by sample in Traps**
barplot(richness_Traps_h_Hymenoptera$sample_richness_Traps_h,col=richness_Traps_h_Hymenoptera$Mountain1Traps,names.arg= richness_Traps_h_Hymenoptera$sample_names_Traps_h, las=2,cex.names=0.5, ylab="richness_Traps_h_Hymenoptera", main="H richness_Traps Hymenoptera")
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
setwd("~/Documents/MetaBC_Traps/bin/Hymenoptera")
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#####open table with names including Region and habitat parameters
s2_raw_all <- read.table("../../genetic/Data_in/Hymenoptera/s2_raw_all_Hymenoptera_threshold.txt", header=TRUE)
dim(s2_raw_all)
#**Table Haplotipos**
#####remove additional columns and leave only names (of haplotipes), samples and taxa (and threshold in this case)
s2_raw_all[,c(1:28,44)]->s2_raw
dim(s2_raw) ##51 samples = 51 plus 1 neg (the second neg from DOM_REPS is not there because all 0)
colnames(s2_raw)
#####Applying the conservative threshold (this is a binary column)
s2_raw[which(s2_raw$conservative_threshold == "1"),]->s2_raw_threshold
s2_raw_threshold [,1:28]->s2_raw_threshold ##remove threshold col
dim(s2_raw_threshold)
colnames(s2_raw_threshold)
##**transform in present/absence table**
s2_raw_threshold->s2_f4_h #NOTA_Nancy: Tengo un subset de Colembolos
s2_f4_h[s2_f4_h>1]<-1 ##2 warning corresponding wiht the columms of the names and taxa
##**checking if there is any row with no presence**
s2_f4_h[,2:28]->data_h
rowSums(data_h)
length(which(rowSums(data_h)!=0))
length(which(rowSums(data_h)==0))
##**Hymenoptera**
t(s2_f4_h)->t_s2_f4_h ##trasp
t_s2_f4_h[2:28,]->community_Hymenoptera_h #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data".
colnames(community_Hymenoptera_h)<-t_s2_f4_h[1,]
as.data.frame(community_Hymenoptera_h)->community_Hymenoptera_h ##trasp including col and row names
####community_Acari[-49,]->community_Hymenoptera ##removing neg
dim(community_Hymenoptera_h)
community_Hymenoptera_h[order(row.names(community_Hymenoptera_h)),]->community_Hymenoptera_h ##order samples
write.table (community_Hymenoptera_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt")->community_Hymenoptera_h
##**submatrixes by Traps in Nevado Toluca.**
dim(community_Hymenoptera_h)
community_Hymenoptera_h[which(str_extract (row.names(community_Hymenoptera_h), "_T_") %in% "_T_"),]->community_Hymenoptera_Traps_h
dim(community_Hymenoptera_Traps_h)
community_Hymenoptera_Traps_h[,which(colSums(community_Hymenoptera_Traps_h)!=0)]->community_Hymenoptera_Traps_h ##to remove no data colums
dim(community_Hymenoptera_Traps_h)
write.table (community_Hymenoptera_Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt")->community_Hymenoptera_Traps_h
##**BY Traps**
##**Generating a general table with names and habitat parameters**
row.names(community_Hymenoptera_Traps_h)->sample_names_Mountain1_h
as.data.frame(sample_names_Mountain1_h)->sample_names_Mountain1_h
sample_names_Mountain1_h %>% separate(sample_names_Mountain1_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps_h ##generating a variable combining layer and habitat
general_sample_Mountain1Traps_h
write.table(general_sample_Mountain1Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt",header=TRUE)->general_sample_Mountain1Traps_h
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##Hymenoptera
as.matrix(community_Hymenoptera_Traps_h)->community_Hymenoptera_Traps_h
row.names(community_Hymenoptera_Traps_h)->sample_names_Traps_h
dim(community_Hymenoptera_Traps_h)->dims_Traps_h
dims_Traps_h
.rowSums (community_Hymenoptera_Traps_h,dims_Traps_h[1],dims_Traps_h[2])->sample_richness_Traps_h ##summatory by rows
rbind(sample_names_Traps_h,sample_richness_Traps_h)->richness_Traps_h_Hymenoptera
t(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
colnames(richness_Traps_h_Hymenoptera)<-c("sample_names_Traps_h","sample_richness_Traps_h")
richness_Traps_h_Hymenoptera
as.data.frame(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps_h_Hymenoptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera ##generating a variable combining layer and habitat
richness_Traps_h_Hymenoptera
##**BY Traps**
write.table(richness_Traps_h_Hymenoptera, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt",header=TRUE)->richness_Traps_h_Hymenoptera
##**General plot of richness by sample in Traps**
barplot(richness_Traps_h_Hymenoptera$sample_richness_Traps_h,col=richness_Traps_h_Hymenoptera$Mountain1Traps,names.arg= richness_Traps_h_Hymenoptera$sample_names_Traps_h, las=2,cex.names=0.5, ylab="richness_Traps_h_Hymenoptera", main="H richness_Traps Hymenoptera")
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
##**min, max, ds Summarise**
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
setwd("~/Documents/MetaBC_Traps/bin/Hymenoptera")
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#####open table with names including Region and habitat parameters
s2_raw_all <- read.table("../../genetic/Data_in/Hymenoptera/s2_raw_all_Hymenoptera_threshold.txt", header=TRUE)
dim(s2_raw_all)
#**Table Haplotipos**
#####remove additional columns and leave only names (of haplotipes), samples and taxa (and threshold in this case)
s2_raw_all[,c(1:28,44)]->s2_raw
dim(s2_raw) ##51 samples = 51 plus 1 neg (the second neg from DOM_REPS is not there because all 0)
colnames(s2_raw)
#####Applying the conservative threshold (this is a binary column)
s2_raw[which(s2_raw$conservative_threshold == "1"),]->s2_raw_threshold
s2_raw_threshold [,1:28]->s2_raw_threshold ##remove threshold col
dim(s2_raw_threshold)
colnames(s2_raw_threshold)
##**transform in present/absence table**
s2_raw_threshold->s2_f4_h #NOTA_Nancy: Tengo un subset de Colembolos
s2_f4_h[s2_f4_h>1]<-1 ##2 warning corresponding wiht the columms of the names and taxa
##**checking if there is any row with no presence**
s2_f4_h[,2:28]->data_h
rowSums(data_h)
length(which(rowSums(data_h)!=0))
length(which(rowSums(data_h)==0))
##**Hymenoptera**
t(s2_f4_h)->t_s2_f4_h ##trasp
t_s2_f4_h[2:28,]->community_Hymenoptera_h #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data".
colnames(community_Hymenoptera_h)<-t_s2_f4_h[1,]
as.data.frame(community_Hymenoptera_h)->community_Hymenoptera_h ##trasp including col and row names
####community_Acari[-49,]->community_Hymenoptera ##removing neg
dim(community_Hymenoptera_h)
community_Hymenoptera_h[order(row.names(community_Hymenoptera_h)),]->community_Hymenoptera_h ##order samples
write.table (community_Hymenoptera_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt")->community_Hymenoptera_h
##**submatrixes by Traps in Nevado Toluca.**
dim(community_Hymenoptera_h)
community_Hymenoptera_h[which(str_extract (row.names(community_Hymenoptera_h), "_T_") %in% "_T_"),]->community_Hymenoptera_Traps_h
dim(community_Hymenoptera_Traps_h)
community_Hymenoptera_Traps_h[,which(colSums(community_Hymenoptera_Traps_h)!=0)]->community_Hymenoptera_Traps_h ##to remove no data colums
dim(community_Hymenoptera_Traps_h)
write.table (community_Hymenoptera_Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt")->community_Hymenoptera_Traps_h
##**BY Traps**
##**Generating a general table with names and habitat parameters**
row.names(community_Hymenoptera_Traps_h)->sample_names_Mountain1_h
as.data.frame(sample_names_Mountain1_h)->sample_names_Mountain1_h
sample_names_Mountain1_h %>% separate(sample_names_Mountain1_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps_h ##generating a variable combining layer and habitat
general_sample_Mountain1Traps_h
write.table(general_sample_Mountain1Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt",header=TRUE)->general_sample_Mountain1Traps_h
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##Hymenoptera
as.matrix(community_Hymenoptera_Traps_h)->community_Hymenoptera_Traps_h
row.names(community_Hymenoptera_Traps_h)->sample_names_Traps_h
dim(community_Hymenoptera_Traps_h)->dims_Traps_h
dims_Traps_h
.rowSums (community_Hymenoptera_Traps_h,dims_Traps_h[1],dims_Traps_h[2])->sample_richness_Traps_h ##summatory by rows
rbind(sample_names_Traps_h,sample_richness_Traps_h)->richness_Traps_h_Hymenoptera
t(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
colnames(richness_Traps_h_Hymenoptera)<-c("sample_names_Traps_h","sample_richness_Traps_h")
richness_Traps_h_Hymenoptera
as.data.frame(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps_h_Hymenoptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera ##generating a variable combining layer and habitat
richness_Traps_h_Hymenoptera
##**Generating variables with in total Traps_C.**
#richness_Traps_h_Hymenoptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_TrapsC
#richness_TrapsC
#richness_TrapsC %>% unite(Conservation1Mountain1, Conservation1, Mountain1, sep="_",remove=FALSE)->richness_TrapsC ##generating a variable combining layer and habitat
#richness_TrapsC
##**BY Traps**
write.table(richness_Traps_h_Hymenoptera, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt",header=TRUE)->richness_Traps_h_Hymenoptera
##**BY Traps_C general**
#write.table(richness_TrapsC, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_TrapsC_Hymenoptera.txt") ##this is the only way I found to be able to work later
#read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_TrapsC_Hymenoptera.txt",header=TRUE)->richness_TrapsC
##**General plot of richness by sample in Traps**
barplot(richness_Traps_h_Hymenoptera$sample_richness_Traps_h,col=richness_Traps_h_Hymenoptera$Mountain1Traps,names.arg= richness_Traps_h_Hymenoptera$sample_names_Traps_h, las=2,cex.names=0.5, ylab="richness_Traps_h_Hymenoptera", main="H richness_Traps Hymenoptera")
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
##**min, max, ds Summarise**
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(min(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(max(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(sd(sample_richness_Traps_h))
##**Global richness by Traps.**
setwd("~/Documents/MetaBC_Traps/bin/Hymenoptera")
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#####open table with names including Region and habitat parameters
s2_raw_all <- read.table("../../genetic/Data_in/Hymenoptera/s2_raw_all_Hymenoptera_threshold.txt", header=TRUE)
dim(s2_raw_all)
#**Table Haplotipos**
#####remove additional columns and leave only names (of haplotipes), samples and taxa (and threshold in this case)
s2_raw_all[,c(1:28,44)]->s2_raw
dim(s2_raw) ##51 samples = 51 plus 1 neg (the second neg from DOM_REPS is not there because all 0)
colnames(s2_raw)
#####Applying the conservative threshold (this is a binary column)
s2_raw[which(s2_raw$conservative_threshold == "1"),]->s2_raw_threshold
s2_raw_threshold [,1:28]->s2_raw_threshold ##remove threshold col
dim(s2_raw_threshold)
colnames(s2_raw_threshold)
##**transform in present/absence table**
s2_raw_threshold->s2_f4_h #NOTA_Nancy: Tengo un subset de Colembolos
s2_f4_h[s2_f4_h>1]<-1 ##2 warning corresponding wiht the columms of the names and taxa
##**checking if there is any row with no presence**
s2_f4_h[,2:28]->data_h
rowSums(data_h)
length(which(rowSums(data_h)!=0))
length(which(rowSums(data_h)==0))
##**Hymenoptera**
t(s2_f4_h)->t_s2_f4_h ##trasp
t_s2_f4_h[2:28,]->community_Hymenoptera_h #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data".
colnames(community_Hymenoptera_h)<-t_s2_f4_h[1,]
as.data.frame(community_Hymenoptera_h)->community_Hymenoptera_h ##trasp including col and row names
####community_Acari[-49,]->community_Hymenoptera ##removing neg
dim(community_Hymenoptera_h)
community_Hymenoptera_h[order(row.names(community_Hymenoptera_h)),]->community_Hymenoptera_h ##order samples
write.table (community_Hymenoptera_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt")->community_Hymenoptera_h
##**submatrixes by Traps in Nevado Toluca.**
dim(community_Hymenoptera_h)
community_Hymenoptera_h[which(str_extract (row.names(community_Hymenoptera_h), "_T_") %in% "_T_"),]->community_Hymenoptera_Traps_h
dim(community_Hymenoptera_Traps_h)
community_Hymenoptera_Traps_h[,which(colSums(community_Hymenoptera_Traps_h)!=0)]->community_Hymenoptera_Traps_h ##to remove no data colums
dim(community_Hymenoptera_Traps_h)
write.table (community_Hymenoptera_Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt")->community_Hymenoptera_Traps_h
##**BY Traps**
##**Generating a general table with names and habitat parameters**
row.names(community_Hymenoptera_Traps_h)->sample_names_Mountain1_h
as.data.frame(sample_names_Mountain1_h)->sample_names_Mountain1_h
sample_names_Mountain1_h %>% separate(sample_names_Mountain1_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps_h ##generating a variable combining layer and habitat
general_sample_Mountain1Traps_h
write.table(general_sample_Mountain1Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt",header=TRUE)->general_sample_Mountain1Traps_h
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##Hymenoptera
as.matrix(community_Hymenoptera_Traps_h)->community_Hymenoptera_Traps_h
row.names(community_Hymenoptera_Traps_h)->sample_names_Traps_h
dim(community_Hymenoptera_Traps_h)->dims_Traps_h
dims_Traps_h
.rowSums (community_Hymenoptera_Traps_h,dims_Traps_h[1],dims_Traps_h[2])->sample_richness_Traps_h ##summatory by rows
rbind(sample_names_Traps_h,sample_richness_Traps_h)->richness_Traps_h_Hymenoptera
t(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
colnames(richness_Traps_h_Hymenoptera)<-c("sample_names_Traps_h","sample_richness_Traps_h")
richness_Traps_h_Hymenoptera
as.data.frame(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps_h_Hymenoptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera ##generating a variable combining layer and habitat
richness_Traps_h_Hymenoptera
##**Generating variables with in total Traps_
##**BY Traps**
write.table(richness_Traps_h_Hymenoptera, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt",header=TRUE)->richness_Traps_h_Hymenoptera
##**General plot of richness by sample in Traps**
barplot(richness_Traps_h_Hymenoptera$sample_richness_Traps_h,col=richness_Traps_h_Hymenoptera$Mountain1Traps,names.arg= richness_Traps_h_Hymenoptera$sample_names_Traps_h, las=2,cex.names=0.5, ylab="richness_Traps_h_Hymenoptera", main="H richness_Traps Hymenoptera")
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
##**min, max, ds Summarise**
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(min(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(max(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(sd(sample_richness_Traps_h))
##**Global richness by Traps.**
plot(richness_Traps_h_Hymenoptera$Mountain1Traps,richness_Traps_h_Hymenoptera$sample_richness_Traps_h,ylab="richness_Traps_h_Hymenoptera", cex=1.4, cex.axis=2.3, lwd=2.5, ylim=c(0,20))
kruskal.test(sample_richness_Traps_h ~ Mountain1Traps, data = richness_Traps_h_Hymenoptera)
#posthoc.kruskal.nemenyi.test(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, method="Bonferroni")
#PMCMRplus::kwAllPairsNemenyiTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, dist = c("Tukey", "Chisquare"), p.adjust.method="bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
#text(x=c(1,2,3,4), y=(2), labels=c("ab","a","ab","b"), cex=1.5)
text(x=4.4, y=0.3, labels="ns", cex=2)
beta.multi(community_Hymenoptera_Traps_h, index.family="sorensen")
##**Global richness by Traps.**
plot(richness_Traps_h_Hymenoptera$Mountain1Traps,richness_Traps_h_Hymenoptera$sample_richness_Traps_h,ylab="richness_Traps_h_Hymenoptera", cex=1.4, cex.axis=2.3, lwd=2.5, ylim=c(0,15))
kruskal.test(sample_richness_Traps_h ~ Mountain1Traps, data = richness_Traps_h_Hymenoptera)
#posthoc.kruskal.nemenyi.test(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, method="Bonferroni")
#PMCMRplus::kwAllPairsNemenyiTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, dist = c("Tukey", "Chisquare"), p.adjust.method="bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
#text(x=c(1,2,3,4), y=(2), labels=c("ab","a","ab","b"), cex=1.5)
text(x=4.4, y=0.3, labels="ns", cex=2)
##**Global richness by Traps.**
plot(richness_Traps_h_Hymenoptera$Mountain1Traps,richness_Traps_h_Hymenoptera$sample_richness_Traps_h,ylab="richness_Traps_h_Hymenoptera", cex=1.4, cex.axis=2.3, lwd=2.5, ylim=c(0,10))
kruskal.test(sample_richness_Traps_h ~ Mountain1Traps, data = richness_Traps_h_Hymenoptera)
#posthoc.kruskal.nemenyi.test(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, method="Bonferroni")
#PMCMRplus::kwAllPairsNemenyiTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, dist = c("Tukey", "Chisquare"), p.adjust.method="bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
#text(x=c(1,2,3,4), y=(2), labels=c("ab","a","ab","b"), cex=1.5)
text(x=4.4, y=0.3, labels="ns", cex=2)
setwd("~/Documents/MetaBC_Traps/bin/Hymenoptera")
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Hymenoptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#####open table with names including Region and habitat parameters
s2_raw_all <- read.table("../../genetic/Data_in/Hymenoptera/s2_raw_all_Hymenoptera_threshold.txt", header=TRUE)
dim(s2_raw_all)
#**Table Haplotipos**
#####remove additional columns and leave only names (of haplotipes), samples and taxa (and threshold in this case)
s2_raw_all[,c(1:28,44)]->s2_raw
dim(s2_raw) ##51 samples = 51 plus 1 neg (the second neg from DOM_REPS is not there because all 0)
colnames(s2_raw)
#####Applying the conservative threshold (this is a binary column)
s2_raw[which(s2_raw$conservative_threshold == "1"),]->s2_raw_threshold
s2_raw_threshold [,1:28]->s2_raw_threshold ##remove threshold col
dim(s2_raw_threshold)
colnames(s2_raw_threshold)
##**transform in present/absence table**
s2_raw_threshold->s2_f4_h #NOTA_Nancy: Tengo un subset de Colembolos
s2_f4_h[s2_f4_h>1]<-1 ##2 warning corresponding wiht the columms of the names and taxa
##**checking if there is any row with no presence**
s2_f4_h[,2:28]->data_h
rowSums(data_h)
length(which(rowSums(data_h)!=0))
length(which(rowSums(data_h)==0))
##**Hymenoptera**
t(s2_f4_h)->t_s2_f4_h ##trasp
t_s2_f4_h[2:28,]->community_Hymenoptera_h #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data".
colnames(community_Hymenoptera_h)<-t_s2_f4_h[1,]
as.data.frame(community_Hymenoptera_h)->community_Hymenoptera_h ##trasp including col and row names
####community_Acari[-49,]->community_Hymenoptera ##removing neg
dim(community_Hymenoptera_h)
community_Hymenoptera_h[order(row.names(community_Hymenoptera_h)),]->community_Hymenoptera_h ##order samples
write.table (community_Hymenoptera_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_h.txt")->community_Hymenoptera_h
##**submatrixes by Traps in Nevado Toluca.**
dim(community_Hymenoptera_h)
community_Hymenoptera_h[which(str_extract (row.names(community_Hymenoptera_h), "_T_") %in% "_T_"),]->community_Hymenoptera_Traps_h
dim(community_Hymenoptera_Traps_h)
community_Hymenoptera_Traps_h[,which(colSums(community_Hymenoptera_Traps_h)!=0)]->community_Hymenoptera_Traps_h ##to remove no data colums
dim(community_Hymenoptera_Traps_h)
write.table (community_Hymenoptera_Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/community_Hymenoptera_Traps_h.txt")->community_Hymenoptera_Traps_h
##**BY Traps**
##**Generating a general table with names and habitat parameters**
row.names(community_Hymenoptera_Traps_h)->sample_names_Mountain1_h
as.data.frame(sample_names_Mountain1_h)->sample_names_Mountain1_h
sample_names_Mountain1_h %>% separate(sample_names_Mountain1_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps_h ##generating a variable combining layer and habitat
general_sample_Mountain1Traps_h
write.table(general_sample_Mountain1Traps_h, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/general_sample_Mountain1Traps_h.txt",header=TRUE)->general_sample_Mountain1Traps_h
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##Hymenoptera
as.matrix(community_Hymenoptera_Traps_h)->community_Hymenoptera_Traps_h
row.names(community_Hymenoptera_Traps_h)->sample_names_Traps_h
dim(community_Hymenoptera_Traps_h)->dims_Traps_h
dims_Traps_h
.rowSums (community_Hymenoptera_Traps_h,dims_Traps_h[1],dims_Traps_h[2])->sample_richness_Traps_h ##summatory by rows
rbind(sample_names_Traps_h,sample_richness_Traps_h)->richness_Traps_h_Hymenoptera
t(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
colnames(richness_Traps_h_Hymenoptera)<-c("sample_names_Traps_h","sample_richness_Traps_h")
richness_Traps_h_Hymenoptera
as.data.frame(richness_Traps_h_Hymenoptera)->richness_Traps_h_Hymenoptera
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps_h_Hymenoptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera
richness_Traps_h_Hymenoptera %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps_h_Hymenoptera ##generating a variable combining layer and habitat
richness_Traps_h_Hymenoptera
##**BY Traps**
write.table(richness_Traps_h_Hymenoptera, file="../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Hymenoptera/Hymenoptera_Haplotypes/richness_Traps_h_Hymenoptera.txt",header=TRUE)->richness_Traps_h_Hymenoptera
##**General plot of richness by sample in Traps**
barplot(richness_Traps_h_Hymenoptera$sample_richness_Traps_h,col=richness_Traps_h_Hymenoptera$Mountain1Traps,names.arg= richness_Traps_h_Hymenoptera$sample_names_Traps_h, las=2,cex.names=0.5, ylab="richness_Traps_h_Hymenoptera", main="H richness_Traps Hymenoptera")
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
##**min, max, ds Summarise**
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(min(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(max(sample_richness_Traps_h))
richness_Traps_h_Hymenoptera %>% group_by(Mountain1Traps) %>% summarise(sd(sample_richness_Traps_h))
##**Global richness by Traps.**
plot(richness_Traps_h_Hymenoptera$Mountain1Traps,richness_Traps_h_Hymenoptera$sample_richness_Traps_h,ylab="richness_Traps_h_Hymenoptera", cex=1.4, cex.axis=2.3, lwd=2.5, ylim=c(0,10))
kruskal.test(sample_richness_Traps_h ~ Mountain1Traps, data = richness_Traps_h_Hymenoptera)
#posthoc.kruskal.nemenyi.test(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, method="Bonferroni")
#PMCMRplus::kwAllPairsNemenyiTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, dist = c("Tukey", "Chisquare"), p.adjust.method="bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps_h_Hymenoptera$sample_richness_Traps_h, g=richness_Traps_h_Hymenoptera$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
#text(x=c(1,2,3,4), y=(2), labels=c("ab","a","ab","b"), cex=1.5)
text(x=4.4, y=0.3, labels="ns", cex=2)
