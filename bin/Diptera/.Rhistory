levels_limite0.05[i]->level0.05
s2_raw_threshold[which(s2_raw_threshold$limite0.05==level0.05),]->subcom_level_names0.05
subcom_level_names0.05[,c(2:34)]->subcom_level0.05  #delete names, level and also the negative column
colSums(subcom_level0.05)->sum0.05
as.data.frame(sum0.05)->sum0.05
t(sum0.05)->sum0.05
row.names(sum0.05)<-subcom_level_names0.05[1,1] #keep the name of the first haplotype
rbind(s2_raw_Diptera_limite0.05,sum0.05)->s2_raw_Diptera_limite0.05
}
##**transform in present/absence table**
s2_raw_Diptera_limite0.05->s2_raw_Diptera_limite0.05
s2_raw_Diptera_limite0.05[s2_raw_Diptera_limite0.05>1]<-1 ##transform in present/absence table
##**checking if there is any row with no presence**
s2_raw_Diptera_limite0.05[,1:33]->data0.05
rowSums(data0.05)
length(which(rowSums(data0.05)!=0))
length(which(rowSums(data0.05)==0))
##**Community matrixes (samples in rows and h in cols).**
##**Diptera**
t(s2_raw_Diptera_limite0.05)->t_s2_f4_Diptera_limite0.05 ##trasp
t_s2_f4_Diptera_limite0.05[1:33,]->community_Diptera_limite0.05 #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data0.05".
colnames(t_s2_f4_Diptera_limite0.05)<-community_Diptera_limite0.05[1,]
as.data.frame(community_Diptera_limite0.05)->community_Diptera0.05 ##trasp including col and row names
####community_Acari[-49,]->community_Diptera ##removing neg
dim(community_Diptera0.05)
community_Diptera0.05[order(row.names(community_Diptera0.05)),]->community_Diptera0.05 ##order samples
write.table (community_Diptera0.05, file="../../genetic/Data_out/Diptera/Diptera5P/community_Diptera0.05.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera5P/community_Diptera0.05.txt")->community_Diptera0.05
##**submatrixes by Traps in Nevado Toluca**
dim(community_Diptera0.05)
community_Diptera0.05[which(str_extract (row.names(community_Diptera0.05), "_T_") %in% "_T_"),]->community_Diptera_Traps0.05
dim(community_Diptera_Traps0.05)
community_Diptera_Traps0.05[,which(colSums(community_Diptera_Traps0.05)!=0)]->community_Diptera_Traps0.05 ##to remove no data colums
dim(community_Diptera_Traps0.05)
write.table (community_Diptera_Traps0.05, file="../../genetic/Data_out/Diptera/Diptera5P/community_Diptera_Traps0.05.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera5P/community_Diptera_Traps0.05.txt")->community_Diptera_Traps0.05
##**Generating a general table with names and habitat parameters.**
##BY Traps
##**Generating a general table with names and habitat parameters**
row.names(community_Diptera_Traps0.05)->sample_names_Mountain1_0.05
as.data.frame(sample_names_Mountain1_0.05)->sample_names_Mountain1_0.05
sample_names_Mountain1_0.05 %>% separate(sample_names_Mountain1_0.05, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps0.05
general_sample_Mountain1Traps0.05
general_sample_Mountain1Traps0.05 %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps0.05 ####generating a variable combining layer and habitat
general_sample_Mountain1Traps0.05
write.table(general_sample_Mountain1Traps0.05, file="../../genetic/Data_out/Diptera/Diptera5P/general_sample_Mountain1Traps0.05.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera5P/general_sample_Mountain1Traps0.05.txt",header=TRUE)->general_sample_Mountain1Traps0.05
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##**Diptera**
as.matrix(community_Diptera_Traps0.05)->community_Diptera_Traps0.05
row.names(community_Diptera_Traps0.05)->sample_names_Traps0.05
dim(community_Diptera_Traps0.05)->dims_Traps0.05
dims_Traps0.05
.rowSums (community_Diptera_Traps0.05,dims_Traps0.05[1],dims_Traps0.05[2])->sample_richness_Traps0.05 ##summatory by rows
rbind(sample_names_Traps0.05,sample_richness_Traps0.05)->richness_Traps0.05
t(richness_Traps0.05)->richness_Traps0.05
colnames(richness_Traps0.05)<-c("sample_names_Traps0.05","sample_richness_Traps0.05")
richness_Traps0.05
as.data.frame(richness_Traps0.05)->richness_Traps0.05
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps0.05 %>% separate(sample_names_Traps0.05, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps0.05
richness_Traps0.05
richness_Traps0.05 %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps0.05 ##generating a variable combining layer and habitat
richness_Traps0.05
##**Generating variables with in total Traps_C.**
#richness_Traps0.05 %>% separate(sample_names_Traps0.05, c("Conservation","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_TrapsC
#richness_TrapsC
#richness_TrapsC %>% unite(ConservationMountain1, Conservation, Mountain1, sep="_",remove=FALSE)->richness_TrapsC ##generating a variable combining layer and habitat
#richness_TrapsC
##**BY Traps**
write.table(richness_Traps0.05, file="../../genetic/Data_out/Diptera/Diptera5P/richness_Traps0.05_Diptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera5P/richness_Traps0.05_Diptera.txt",header=TRUE)->richness_Traps0.05
##**BY Traps_C general**
#write.table(richness_TrapsC, file="../../genetic/Data_out/Diptera/Diptera5P/richness_TrapsC_Diptera.txt") ##this is the only way I found to be able to work later
#read.table("../../genetic/Data_out/Diptera/Diptera5P/richness_TrapsC_Diptera.txt",header=TRUE)->richness_TrapsC
##**General plot of richness by sample in Traps**
barplot(richness_Traps0.05$sample_richness_Traps0.05,col=richness_Traps0.05$Mountain1Traps,names.arg= richness_Traps0.05$sample_names_Traps0.05,las=2,cex.names=0.5, ylab="richness_Traps0.05", main="H richness_Traps Diptera_0.05")
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps0.05))
##**min, max, ds Summarise**
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(min(sample_richness_Traps0.05))
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(max(sample_richness_Traps0.05))
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(sd(sample_richness_Traps0.05))
##**General mean, min, max, ds by sample in Traps_richness_TrapsC**
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(mean(sample_richness_Traps0.05))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(min(sample_richness_Traps0.05))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(max(sample_richness_Traps0.05))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(sd(sample_richness_Traps0.05))
##**Global richness by Traps.**
plot(richness_Traps0.05$Mountain1Traps,richness_Traps0.05$sample_richness_Traps0.05,ylab="richness_Traps0.05", ylim=c(0,30), cex=1.4, cex.axis=2.3, lwd=2.5)
kruskal.test(sample_richness_Traps0.05 ~ Mountain1Traps, data = richness_Traps0.05)
#posthoc.kruskal.nemenyi.test(x=richness_Traps0.05$sample_richness_Traps0.05, g=richness_Traps0.05$Mountain1Traps, method="Bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps0.05$sample_richness_Traps0.05, g=richness_Traps0.05$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
#text(x=c(1,2,3,4.1), y=(49), labels=c("ab","a","ab","b"), cex=1.4)
text(x=c(1,2,3,4), y=(2), labels=c("a","a","a","b"), cex=1.5)
text(x=4.5, y=2, labels="*", cex=2)
mtext(c("lineage 5%"), side = 3, col = "black", line = 1, cex = 2)
setwd("~/Documents/MetaBC_Traps/bin/Diptera")
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Diptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#**INITIAL STEPS**
#**Community diversity and composition at the haplotype level of the Diptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
library(PMCMRplus)
#####open table with names including Region and habitat parameters
s2_raw_all <- read.table("../../genetic/Data_in/Diptera/s2_raw_all_Diptera_threshold.txt", header=TRUE)
dim(s2_raw_all)
#**Table Haplotipos**
#####remove additional columns and leave only names (of haplotipes), samples and taxa (and threshold in this case)
s2_raw_all[,c(1:34,50)]->s2_raw
dim(s2_raw) ##51 samples = 51 plus 1 neg (the second neg from DOM_REPS is not there because all 0)
colnames(s2_raw)
#####Applying the conservative threshold (this is a binary column)
s2_raw[which(s2_raw$conservative_threshold == "1"),]->s2_raw_threshold
s2_raw_threshold [,1:34]->s2_raw_threshold ##remove threshold col
dim(s2_raw_threshold)
colnames(s2_raw_threshold)
##**transform in present/absence table**
s2_raw_threshold->s2_f4_h #NOTA_Nancy: Tengo un subset de Colembolos
s2_f4_h[s2_f4_h>1]<-1 ##2 warning corresponding wiht the columms of the names and taxa
##**checking if there is any row with no presence**
s2_f4_h[,2:34]->data_h
rowSums(data_h)
length(which(rowSums(data_h)!=0))
length(which(rowSums(data_h)==0))
##**Diptera**
t(s2_f4_h)->t_s2_f4_h ##trasp
t_s2_f4_h[2:34,]->community_Diptera_h #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data".
colnames(community_Diptera_h)<-t_s2_f4_h[1,]
as.data.frame(community_Diptera_h)->community_Diptera_h ##trasp including col and row names
####community_Acari[-49,]->community_Diptera ##removing neg
dim(community_Diptera_h)
community_Diptera_h[order(row.names(community_Diptera_h)),]->community_Diptera_h ##order samples
write.table (community_Diptera_h, file="../../genetic/Data_out/Diptera/Diptera_Haplotypes/community_Diptera_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera_Haplotypes/community_Diptera_h.txt")->community_Diptera_h
##**submatrixes by Traps in Nevado Toluca.**
dim(community_Diptera_h)
community_Diptera_h[which(str_extract (row.names(community_Diptera_h), "_T_") %in% "_T_"),]->community_Diptera_Traps_h
dim(community_Diptera_Traps_h)
community_Diptera_Traps_h[,which(colSums(community_Diptera_Traps_h)!=0)]->community_Diptera_Traps_h ##to remove no data colums
dim(community_Diptera_Traps_h)
write.table (community_Diptera_Traps_h, file="../../genetic/Data_out/Diptera/Diptera_Haplotypes/community_Diptera_Traps_h.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera_Haplotypes/community_Diptera_Traps_h.txt")->community_Diptera_Traps_h
##**BY Traps**
##**Generating a general table with names and habitat parameters**
row.names(community_Diptera_Traps_h)->sample_names_Mountain1_h
as.data.frame(sample_names_Mountain1_h)->sample_names_Mountain1_h
sample_names_Mountain1_h %>% separate(sample_names_Mountain1_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h
general_sample_Mountain1Traps_h %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps_h ##generating a variable combining layer and habitat
general_sample_Mountain1Traps_h
write.table(general_sample_Mountain1Traps_h, file="../../genetic/Data_out/Diptera/Diptera_Haplotypes/general_sample_Mountain1Traps_h.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera_Haplotypes/general_sample_Mountain1Traps_h.txt",header=TRUE)->general_sample_Mountain1Traps_h
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##Diptera
as.matrix(community_Diptera_Traps_h)->community_Diptera_Traps_h
row.names(community_Diptera_Traps_h)->sample_names_Traps_h
dim(community_Diptera_Traps_h)->dims_Traps_h
dims_Traps_h
.rowSums (community_Diptera_Traps_h,dims_Traps_h[1],dims_Traps_h[2])->sample_richness_Traps_h ##summatory by rows
rbind(sample_names_Traps_h,sample_richness_Traps_h)->richness_Traps_h_Diptera
t(richness_Traps_h_Diptera)->richness_Traps_h_Diptera
colnames(richness_Traps_h_Diptera)<-c("sample_names_Traps_h","sample_richness_Traps_h")
richness_Traps_h_Diptera
as.data.frame(richness_Traps_h_Diptera)->richness_Traps_h_Diptera
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps_h_Diptera %>% separate(sample_names_Traps_h, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps_h_Diptera
richness_Traps_h_Diptera
richness_Traps_h_Diptera %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps_h_Diptera ##generating a variable combining layer and habitat
richness_Traps_h_Diptera
##**BY Traps**
write.table(richness_Traps_h_Diptera, file="../../genetic/Data_out/Diptera/Diptera_Haplotypes/richness_Traps_h_Diptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera_Haplotypes/richness_Traps_h_Diptera.txt",header=TRUE)->richness_Traps_h_Diptera
##**General plot of richness by sample in Traps**
barplot(richness_Traps_h_Diptera$sample_richness_Traps_h,col=richness_Traps_h_Diptera$Mountain1Traps,names.arg= richness_Traps_h_Diptera$sample_names_Traps_h, las=2,cex.names=0.5, ylab="richness_Traps_h_Diptera", main="H richness_Traps Diptera")
richness_Traps_h_Diptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
##**min, max, ds Summarise**
richness_Traps_h_Diptera %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps_h))
richness_Traps_h_Diptera %>% group_by(Mountain1Traps) %>% summarise(min(sample_richness_Traps_h))
richness_Traps_h_Diptera %>% group_by(Mountain1Traps) %>% summarise(max(sample_richness_Traps_h))
richness_Traps_h_Diptera %>% group_by(Mountain1Traps) %>% summarise(sd(sample_richness_Traps_h))
##**Global richness by Traps.**
plot(richness_Traps_h_Diptera$Mountain1Traps,richness_Traps_h_Diptera$sample_richness_Traps_h,ylab="richness_Traps_h_Diptera", cex=1.4, cex.axis=2.3, lwd=2.5, ylim=c(0,60))
kruskal.test(sample_richness_Traps_h ~ Mountain1Traps, data = richness_Traps_h_Diptera)
#posthoc.kruskal.nemenyi.test(x=richness_Traps_h_Diptera$sample_richness_Traps_h, g=richness_Traps_h_Diptera$Mountain1Traps, method="Bonferroni")
#PMCMRplus::kwAllPairsNemenyiTest(x=richness_Traps_h_Diptera$sample_richness_Traps_h, g=richness_Traps_h_Diptera$Mountain1Traps, dist = c("Tukey", "Chisquare"), p.adjust.method="bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps_h_Diptera$sample_richness_Traps_h, g=richness_Traps_h_Diptera$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
text(x=c(1,2,3,4), y=(2), labels=c("ab","a","ab","b"), cex=1.5)
text(x=4.5, y=2, labels="*", cex=2)
setwd("~/Documents/MetaBC_Traps/bin/Diptera")
#**INITIAL STEPS**
#**Community diversity and composition at the 3% Clustering level of the Diptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
#**INITIAL STEPS**
#**Community diversity and composition at the 3% Clustering level of the Diptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
#**TABLES AND COMMUNITY MATRIXES**
#####open table with names including Region and habitat parameters
s2_raw_all <- read.table("../../genetic/Data_in/Diptera/s2_raw_all_Diptera_threshold.txt", header=TRUE)
dim(s2_raw_all)
#####remove additional columns and leave only names (of haplotipes), samples and taxa (and threshold in this case)
s2_raw_all[,c(1:48,50)]->s2_raw
dim(s2_raw) ##49 samples = 48 plus 1 neg (the second neg from DOM_REPS is not there because all 0)
colnames(s2_raw)
#####Applying the conservative threshold (this is a binary column)
s2_raw[which(s2_raw$conservative_threshold == "1"),]->s2_raw_threshold
s2_raw_threshold [,1:48]->s2_raw_threshold ##remove threshold col
dim(s2_raw_threshold)
colnames(s2_raw_threshold)
#####loop to create the new matrix combining haplotype by otu pertenency, i.e. submatrix by limit
#**Diptera**
unique (s2_raw_threshold$limite0.03)->levels_limite0.03
data.frame()->s2_raw_Diptera_limite0.03
for (i in 1:length(unique (s2_raw_threshold$limite0.03)))
{
levels_limite0.03[i]->level0.03
s2_raw_threshold[which(s2_raw_threshold$limite0.03==level0.03),]->subcom_level_names0.03
subcom_level_names0.03[,c(2:34)]->subcom_level0.03  #delete names, level and also the negative column
colSums(subcom_level0.03)->sum0.03
as.data.frame(sum0.03)->sum0.03
t(sum0.03)->sum0.03
row.names(sum0.03)<-subcom_level_names0.03[1,1] #keep the name of the first haplotype
rbind(s2_raw_Diptera_limite0.03,sum0.03)->s2_raw_Diptera_limite0.03
}
##**transform in present/absence table**
s2_raw_Diptera_limite0.03->s2_raw_Diptera_limite0.03
s2_raw_Diptera_limite0.03[s2_raw_Diptera_limite0.03>1]<-1 ##transform in present/absence table
##**checking if there is any row with no presence**
s2_raw_Diptera_limite0.03[,1:33]->data0.03
rowSums(data0.03)
length(which(rowSums(data0.03)!=0))
length(which(rowSums(data0.03)==0))
##**Community matrixes (samples in rows and h in cols).**
##**Diptera**
t(s2_raw_Diptera_limite0.03)->t_s2_f4_Diptera_limite0.03 ##trasp
t_s2_f4_Diptera_limite0.03[1:33,]->community_Diptera_limite0.03 #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data0.03".
colnames(t_s2_f4_Diptera_limite0.03)<-community_Diptera_limite0.03[1,]
as.data.frame(community_Diptera_limite0.03)->community_Diptera0.03 ##trasp including col and row names
####community_Acari[-49,]->community_Diptera ##removing neg
dim(community_Diptera0.03)
community_Diptera0.03[order(row.names(community_Diptera0.03)),]->community_Diptera0.03 ##order samples
write.table (community_Diptera0.03, file="../../genetic/Data_out/Diptera/Diptera3P/community_Diptera0.03.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera3P/community_Diptera0.03.txt")->community_Diptera0.03
##**submatrixes by Traps in Nevado Toluca**
dim(community_Diptera0.03)
community_Diptera0.03[which(str_extract (row.names(community_Diptera0.03), "_T_") %in% "_T_"),]->community_Diptera_Traps0.03
dim(community_Diptera_Traps0.03)
community_Diptera_Traps0.03[,which(colSums(community_Diptera_Traps0.03)!=0)]->community_Diptera_Traps0.03 ##to remove no data colums
dim(community_Diptera_Traps0.03)
write.table (community_Diptera_Traps0.03, file="../../genetic/Data_out/Diptera/Diptera3P/community_Diptera_Traps0.03.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera3P/community_Diptera_Traps0.03.txt")->community_Diptera_Traps0.03
##**Generating a general table with names and habitat parameters.**
##BY Traps
##**Generating a general table with names and habitat parameters**
row.names(community_Diptera_Traps0.03)->sample_names_Mountain1_0.03
as.data.frame(sample_names_Mountain1_0.03)->sample_names_Mountain1_0.03
sample_names_Mountain1_0.03 %>% separate(sample_names_Mountain1_0.03, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps0.03
general_sample_Mountain1Traps0.03
general_sample_Mountain1Traps0.03 %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps0.03 ####generating a variable combining layer and habitat
general_sample_Mountain1Traps0.03
write.table(general_sample_Mountain1Traps0.03, file="../../genetic/Data_out/Diptera/Diptera3P/general_sample_Mountain1Traps0.03.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera3P/general_sample_Mountain1Traps0.03.txt",header=TRUE)->general_sample_Mountain1Traps0.03
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##**Diptera**
as.matrix(community_Diptera_Traps0.03)->community_Diptera_Traps0.03
row.names(community_Diptera_Traps0.03)->sample_names_Traps0.03
dim(community_Diptera_Traps0.03)->dims_Traps0.03
dims_Traps0.03
.rowSums (community_Diptera_Traps0.03,dims_Traps0.03[1],dims_Traps0.03[2])->sample_richness_Traps0.03 ##summatory by rows
rbind(sample_names_Traps0.03,sample_richness_Traps0.03)->richness_Traps0.03
t(richness_Traps0.03)->richness_Traps0.03
colnames(richness_Traps0.03)<-c("sample_names_Traps0.03","sample_richness_Traps0.03")
richness_Traps0.03
as.data.frame(richness_Traps0.03)->richness_Traps0.03
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps0.03 %>% separate(sample_names_Traps0.03, c("Conservation","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps0.03
richness_Traps0.03
richness_Traps0.03 %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps0.03 ##generating a variable combining layer and habitat
richness_Traps0.03
##**Generating variables with in total Traps_C.**
#richness_Traps0.03 %>% separate(sample_names_Traps0.03, c("Conservation","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_TrapsC
#richness_TrapsC
#richness_TrapsC %>% unite(ConservationMountain1, Conservation, Mountain1, sep="_",remove=FALSE)->richness_TrapsC ##generating a variable combining layer and habitat
#richness_TrapsC
##**BY Traps**
write.table(richness_Traps0.03, file="../../genetic/Data_out/Diptera/Diptera3P/richness_Traps0.03_Diptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera3P/richness_Traps0.03_Diptera.txt",header=TRUE)->richness_Traps0.03
##**BY Traps_C general**
#write.table(richness_TrapsC, file="../../genetic/Data_out/Diptera/Diptera3P/richness_TrapsC_Diptera.txt") ##this is the only way I found to be able to work later
#read.table("../../genetic/Data_out/Diptera/Diptera3P/richness_TrapsC_Diptera.txt",header=TRUE)->richness_TrapsC
##**General plot of richness by sample in Traps**
barplot(richness_Traps0.03$sample_richness_Traps0.03,col=richness_Traps0.03$Mountain1Traps,names.arg= richness_Traps0.03$sample_names_Traps0.03,las=2,cex.names=0.5, ylab="richness_Traps0.03", main="H richness_Traps Diptera_0.03")
richness_Traps0.03 %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps0.03))
##**min, max, ds Summarise**
richness_Traps0.03 %>% group_by(Mountain1Traps) %>% summarise(min(sample_richness_Traps0.03))
richness_Traps0.03 %>% group_by(Mountain1Traps) %>% summarise(max(sample_richness_Traps0.03))
richness_Traps0.03 %>% group_by(Mountain1Traps) %>% summarise(sd(sample_richness_Traps0.03))
##**General mean, min, max, ds by sample in Traps_richness_TrapsC**
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(mean(sample_richness_Traps0.03))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(min(sample_richness_Traps0.03))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(max(sample_richness_Traps0.03))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(sd(sample_richness_Traps0.03))
##**Global richness by Traps.**
plot(richness_Traps0.03$Mountain1Traps,richness_Traps0.03$sample_richness_Traps0.03,ylab="richness_Traps0.03", ylim=c(0,30), cex=1.4, cex.axis=2.3, lwd=2.5)
kruskal.test(sample_richness_Traps0.03 ~ Mountain1Traps, data = richness_Traps0.03)
#posthoc.kruskal.nemenyi.test(x=richness_Traps0.03$sample_richness_Traps0.03, g=richness_Traps0.03$Mountain1Traps, method="Bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps0.03$sample_richness_Traps0.03, g=richness_Traps0.03$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
#text(x=c(1,2,3,4.1), y=(49), labels=c("ab","a","ab","b"), cex=1.4)
text(x=c(1,2,3,4), y=(2), labels=c("ab","a","ab","b"), cex=1.5)
text(x=4.3, y=2, labels="*", cex=2)
mtext(c("lineage 3%"), side = 3, col = "black", line = 1, cex = 2)
setwd("~/Documents/MetaBC_Traps/bin/Diptera")
#**INITIAL STEPS**
#**Community diversity and composition at the 5% Clustering level of the Diptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
#**INITIAL STEPS**
#**Community diversity and composition at the 5% Clustering level of the Diptera order**
#####In excel remove the simbol ## from the names of the table and rename the samples acccording to the code used in the gradient e.g. GRA_S10_D_F_A10
library(stats)
library(base)
library(dplyr)
library(tidyr)
library(knitr)
library(PMCMR)
library(rcdd)
library(vegan)
library(betapart)
library(stringr)
library(permute)
library(lattice)
#**TABLES AND COMMUNITY MATRIXES**
#####open table with names including Region and habitat parameters
s2_raw_all <- read.table("../../genetic/Data_in/Diptera/s2_raw_all_Diptera_threshold.txt", header=TRUE)
dim(s2_raw_all)
#####remove additional columns and leave only names (of haplotipes), samples and taxa (and threshold in this case)
s2_raw_all[,c(1:48,50)]->s2_raw
dim(s2_raw) ##49 samples = 48 plus 1 neg (the second neg from DOM_REPS is not there because all 0)
colnames(s2_raw)
#####Applying the conservative threshold (this is a binary column)
s2_raw[which(s2_raw$conservative_threshold == "1"),]->s2_raw_threshold
s2_raw_threshold [,1:48]->s2_raw_threshold ##remove threshold col
dim(s2_raw_threshold)
colnames(s2_raw_threshold)
#####loop to create the new matrix combining haplotype by otu pertenency, i.e. submatrix by limit
#**Diptera**
unique (s2_raw_threshold$limite0.05)->levels_limite0.05
data.frame()->s2_raw_Diptera_limite0.05
for (i in 1:length(unique (s2_raw_threshold$limite0.05)))
{
levels_limite0.05[i]->level0.05
s2_raw_threshold[which(s2_raw_threshold$limite0.05==level0.05),]->subcom_level_names0.05
subcom_level_names0.05[,c(2:34)]->subcom_level0.05  #delete names, level and also the negative column
colSums(subcom_level0.05)->sum0.05
as.data.frame(sum0.05)->sum0.05
t(sum0.05)->sum0.05
row.names(sum0.05)<-subcom_level_names0.05[1,1] #keep the name of the first haplotype
rbind(s2_raw_Diptera_limite0.05,sum0.05)->s2_raw_Diptera_limite0.05
}
##**transform in present/absence table**
s2_raw_Diptera_limite0.05->s2_raw_Diptera_limite0.05
s2_raw_Diptera_limite0.05[s2_raw_Diptera_limite0.05>1]<-1 ##transform in present/absence table
##**checking if there is any row with no presence**
s2_raw_Diptera_limite0.05[,1:33]->data0.05
rowSums(data0.05)
length(which(rowSums(data0.05)!=0))
length(which(rowSums(data0.05)==0))
##**Community matrixes (samples in rows and h in cols).**
##**Diptera**
t(s2_raw_Diptera_limite0.05)->t_s2_f4_Diptera_limite0.05 ##trasp
t_s2_f4_Diptera_limite0.05[1:33,]->community_Diptera_limite0.05 #NOTA_Nancy: Este numero es importante. Colocar exactamente el numero de "s2_f4[,2:52]->data0.05".
colnames(t_s2_f4_Diptera_limite0.05)<-community_Diptera_limite0.05[1,]
as.data.frame(community_Diptera_limite0.05)->community_Diptera0.05 ##trasp including col and row names
####community_Acari[-49,]->community_Diptera ##removing neg
dim(community_Diptera0.05)
community_Diptera0.05[order(row.names(community_Diptera0.05)),]->community_Diptera0.05 ##order samples
write.table (community_Diptera0.05, file="../../genetic/Data_out/Diptera/Diptera5P/community_Diptera0.05.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera5P/community_Diptera0.05.txt")->community_Diptera0.05
##**submatrixes by Traps in Nevado Toluca**
dim(community_Diptera0.05)
community_Diptera0.05[which(str_extract (row.names(community_Diptera0.05), "_T_") %in% "_T_"),]->community_Diptera_Traps0.05
dim(community_Diptera_Traps0.05)
community_Diptera_Traps0.05[,which(colSums(community_Diptera_Traps0.05)!=0)]->community_Diptera_Traps0.05 ##to remove no data colums
dim(community_Diptera_Traps0.05)
write.table (community_Diptera_Traps0.05, file="../../genetic/Data_out/Diptera/Diptera5P/community_Diptera_Traps0.05.txt") ##this is necessary for the format, not able to solve in other way
read.table ("../../genetic/Data_out/Diptera/Diptera5P/community_Diptera_Traps0.05.txt")->community_Diptera_Traps0.05
##**Generating a general table with names and habitat parameters.**
##BY Traps
##**Generating a general table with names and habitat parameters**
row.names(community_Diptera_Traps0.05)->sample_names_Mountain1_0.05
as.data.frame(sample_names_Mountain1_0.05)->sample_names_Mountain1_0.05
sample_names_Mountain1_0.05 %>% separate(sample_names_Mountain1_0.05, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->general_sample_Mountain1Traps0.05
general_sample_Mountain1Traps0.05
general_sample_Mountain1Traps0.05 %>% unite(Mountain1andTraps, Mountain1,Traps, sep="_",remove=FALSE)->general_sample_Mountain1Traps0.05 ####generating a variable combining layer and habitat
general_sample_Mountain1Traps0.05
write.table(general_sample_Mountain1Traps0.05, file="../../genetic/Data_out/Diptera/Diptera5P/general_sample_Mountain1Traps0.05.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera5P/general_sample_Mountain1Traps0.05.txt",header=TRUE)->general_sample_Mountain1Traps0.05
#**HAPLOTYPE RICHNESS TABLES, PLOTS AND ANALYSES by TrapsS**
##**Diptera**
as.matrix(community_Diptera_Traps0.05)->community_Diptera_Traps0.05
row.names(community_Diptera_Traps0.05)->sample_names_Traps0.05
dim(community_Diptera_Traps0.05)->dims_Traps0.05
dims_Traps0.05
.rowSums (community_Diptera_Traps0.05,dims_Traps0.05[1],dims_Traps0.05[2])->sample_richness_Traps0.05 ##summatory by rows
rbind(sample_names_Traps0.05,sample_richness_Traps0.05)->richness_Traps0.05
t(richness_Traps0.05)->richness_Traps0.05
colnames(richness_Traps0.05)<-c("sample_names_Traps0.05","sample_richness_Traps0.05")
richness_Traps0.05
as.data.frame(richness_Traps0.05)->richness_Traps0.05
##**Generating variables with Traps. En la tabla rishnees. Generar variable de montana y sitio.**
richness_Traps0.05 %>% separate(sample_names_Traps0.05, c("Conservation1","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_Traps0.05
richness_Traps0.05
richness_Traps0.05 %>% unite(Mountain1Traps, Mountain1, Traps, sep="_",remove=FALSE)->richness_Traps0.05 ##generating a variable combining layer and habitat
richness_Traps0.05
##**Generating variables with in total Traps_C.**
#richness_Traps0.05 %>% separate(sample_names_Traps0.05, c("Conservation","Mountain1","Traps","ID"), sep="_",remove=FALSE)->richness_TrapsC
#richness_TrapsC
#richness_TrapsC %>% unite(ConservationMountain1, Conservation, Mountain1, sep="_",remove=FALSE)->richness_TrapsC ##generating a variable combining layer and habitat
#richness_TrapsC
##**BY Traps**
write.table(richness_Traps0.05, file="../../genetic/Data_out/Diptera/Diptera5P/richness_Traps0.05_Diptera.txt") ##this is the only way I found to be able to work later
read.table("../../genetic/Data_out/Diptera/Diptera5P/richness_Traps0.05_Diptera.txt",header=TRUE)->richness_Traps0.05
##**BY Traps_C general**
#write.table(richness_TrapsC, file="../../genetic/Data_out/Diptera/Diptera5P/richness_TrapsC_Diptera.txt") ##this is the only way I found to be able to work later
#read.table("../../genetic/Data_out/Diptera/Diptera5P/richness_TrapsC_Diptera.txt",header=TRUE)->richness_TrapsC
##**General plot of richness by sample in Traps**
barplot(richness_Traps0.05$sample_richness_Traps0.05,col=richness_Traps0.05$Mountain1Traps,names.arg= richness_Traps0.05$sample_names_Traps0.05,las=2,cex.names=0.5, ylab="richness_Traps0.05", main="H richness_Traps Diptera_0.05")
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(mean(sample_richness_Traps0.05))
##**min, max, ds Summarise**
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(min(sample_richness_Traps0.05))
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(max(sample_richness_Traps0.05))
richness_Traps0.05 %>% group_by(Mountain1Traps) %>% summarise(sd(sample_richness_Traps0.05))
##**General mean, min, max, ds by sample in Traps_richness_TrapsC**
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(mean(sample_richness_Traps0.05))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(min(sample_richness_Traps0.05))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(max(sample_richness_Traps0.05))
#richness_TrapsC %>% group_by(ConservationMountain1) %>% summarise(sd(sample_richness_Traps0.05))
##**Global richness by Traps.**
plot(richness_Traps0.05$Mountain1Traps,richness_Traps0.05$sample_richness_Traps0.05,ylab="richness_Traps0.05", ylim=c(0,30), cex=1.4, cex.axis=2.3, lwd=2.5)
kruskal.test(sample_richness_Traps0.05 ~ Mountain1Traps, data = richness_Traps0.05)
#posthoc.kruskal.nemenyi.test(x=richness_Traps0.05$sample_richness_Traps0.05, g=richness_Traps0.05$Mountain1Traps, method="Bonferroni")
PMCMRplus::kwAllPairsConoverTest(x=richness_Traps0.05$sample_richness_Traps0.05, g=richness_Traps0.05$Mountain1Traps, p.adjust.method = "single-step")
##Comparison of each group against.
#text(x=c(1,2,3,4.1), y=(49), labels=c("ab","a","ab","b"), cex=1.4)
text(x=c(1,2,3,4), y=(2), labels=c("a","a","a","b"), cex=1.5)
text(x=4.5, y=2, labels="*", cex=2)
mtext(c("lineage 5%"), side = 3, col = "black", line = 1, cex = 2)
#**BETADIVERSITY ORDINATIONS by Trapss**
setwd("~/Documents/MetaBC_Traps/bin/Diptera")
